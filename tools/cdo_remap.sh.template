#!/bin/bash

{% if cluster_regridding %}
# This script is specific for the PIK cluster, which uses SLURM for job scheduling.
# and the module system.
#SBATCH --qos=short
#SBATCH --job-name=cdo_remap_{{grid_id}}
#SBATCH --account=pism
#SBATCH --output=cdo_remap.out
#SBATCH --error=cdo_remap.err
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mail-type=END,FAIL
#SBATCH --mail-user={{user}}@pik-potsdam.de

cdocmd="srun -n $SLURM_NTASKS cdo -P $SLURM_NTASKS"
OMP_NUM_THREADS=$SLURM_NTASKS
{% else %}
cdocmd=cdo
{% endif %}

module load cdo
module load nco

{% if use_cdo_extrapolation %}
export REMAP_EXTRAPOLATE=on
{% endif %}

{% if regridding_method == "conservative" %}
# calculate the weights and save to mapweights
# TODO: if not already exist.
# conservative regridding:
# heavier, but preferred for bed topography and ice thickness
$cdocmd genycon,{{targetgrid}} {{inputfile}} {{mapweights}}
$cdocmd -b F64 -f nc4c remap,{{targetgrid}},{{mapweights}} {{inputfile}} {{regridded_file}}
{% elif regridding_method == "integer" %}
$cdocmd -b F64 -f nc4c remapnn,{{targetgrid}} {{inputfile}} {{regridded_file}}
{% elif regridding_method == "bilinear" %}
# bilinear interpolation, an option if conservative methods fail.
$cdocmd -b F64 -f nc4c remapbil,{{targetgrid}} {{inputfile}} {{regridded_file}}
{% else %}
echo "No regridding method found. Stop here."
{% endif %}

# add x and y variables to output file.
ncks -A -v x,y {{targetgrid}} {{regridded_file}}

echo "regridded file is {{regridded_file}}"
